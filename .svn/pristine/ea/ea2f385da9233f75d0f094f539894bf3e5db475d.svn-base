/**
 * Copyright© 2003-2016 浙江汇信科技有限公司, All Rights Reserved. <br/>
 * 描述: TODO <br/>
 *
 * @author YuShunWei
 * @date 2016年3月7日
 * @version 1.0
 */
package com.icinfo.frk.common.advice;

import com.icinfo.framework.tools.utils.StringUtils;
import com.icinfo.frk.common.response.ApiResponse;
import org.apache.commons.lang3.exception.ExceptionUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.MissingServletRequestParameterException;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.method.annotation.MethodArgumentTypeMismatchException;

import javax.servlet.http.HttpServletRequest;

/**
 * API接口异常处理
 */
@ControllerAdvice({"com.icinfo.frk.api"})
public class APIControllerAdvice {

    public static final Logger logger = LoggerFactory.getLogger(APIControllerAdvice.class);

    /**
     * API调用参数缺失
     *
     * @param request 请求
     * @param e       异常信息
     * @return API调用结果对象
     */
    @ResponseStatus(HttpStatus.OK)
    @ExceptionHandler(MissingServletRequestParameterException.class)
    @ResponseBody
    public ApiResponse handle(HttpServletRequest request, MissingServletRequestParameterException e) throws Exception {
        String description = e.getParameterName() + "参数项必传";
        return new ApiResponse(ApiResponse.FAIL_MISS_PARAM_CODE, ApiResponse.FAIL_MISS_PARAM_MSG, description);
    }

    /**
     * API调用请求参数类型错误
     *
     * @param request 请求
     * @param e       异常信息
     * @return API调用结果对象
     */
    @ResponseStatus(HttpStatus.OK)
    @ExceptionHandler(MethodArgumentTypeMismatchException.class)
    @ResponseBody
    public ApiResponse handle(HttpServletRequest request, MethodArgumentTypeMismatchException e) throws Exception {
        String description = StringUtils.assemblyString("参数名:", e.getName(), ",期望参数类型:",
                String.valueOf(e.getRequiredType()),
                ",错误参数值:",
                String.valueOf(e.getValue()));
        return new ApiResponse(ApiResponse.FAIL_MISMATCH_PARAM_TYPE_CODE, ApiResponse.FAIL_MISMATCH_PARAM_TYPE_MSG, description);
    }

    /**
     * API接口调用异常处理
     *
     * @param e 异常信息
     * @return API调用结果对象
     */
    @ResponseStatus(HttpStatus.OK)
    @ExceptionHandler(Exception.class)
    @ResponseBody
    public ApiResponse handle(HttpServletRequest request, Exception e) throws Exception {
        e.printStackTrace();
        return new ApiResponse(ApiResponse.FAIL_CODE, ApiResponse.FAIL_MSG, ExceptionUtils.getMessage(e));
    }
}
